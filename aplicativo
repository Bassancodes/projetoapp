import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, Alert, Image, TouchableOpacity, StyleSheet } from 'react-native';
import { Audio } from 'expo-av';

// Componente HomeScreen
const HomeScreen = () => (
  <View style={styles.page}>
    <Text style={styles.heading}>Bem-vindo ao Hospital</Text>
    <Text style={styles.text}>Aqui você poderá comprar remédios, visualizar seu carrinho de compras e entrar na nossa fila de espera para consulta.</Text>
  </View>
);

// Componente de Registro
const RegisterScreen = ({ navigateTo, setRegisteredUser }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleRegister = () => {
    if (username && password) {
      setRegisteredUser({ username, password });
      Alert.alert('Registro bem-sucedido! Agora você pode fazer login.');
      navigateTo('Login');
    } else {
      Alert.alert('Por favor, preencha todos os campos.');
    }
  };

  return (
    <View style={styles.page}>
      <Text style={styles.heading}>Registro</Text>
      <TextInput
        placeholder="Nome de Usuário"
        value={username}
        onChangeText={setUsername}
        style={styles.input}
      />
      <TextInput
        placeholder="Senha"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
        style={styles.input}
      />
      <Button title="Registrar" onPress={handleRegister} color="#3498db" />
    </View>
  );
};

// Componente de Login
const LoginScreen = ({ navigateTo, registeredUser, setIsLoggedIn }) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = () => {
    if (registeredUser && username === registeredUser.username && password === registeredUser.password) {
      Alert.alert('Login bem-sucedido!');
      setIsLoggedIn(true);
      navigateTo('Home');
    } else {
      Alert.alert('Usuário ou senha incorretos.');
    }
  };

  return (
    <View style={styles.page}>
      <Text style={styles.heading}>Login</Text>
      <TextInput
        placeholder="Nome de Usuário"
        value={username}
        onChangeText={setUsername}
        style={styles.input}
      />
      <TextInput
        placeholder="Senha"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
        style={styles.input}
      />
      <Button title="Entrar" onPress={handleLogin} color="#3498db" />
    </View>
  );
};

// Tela de Produtos (Shop) para exibir os três remédios com preços
const ShopScreen = ({ addToCart, navigateTo }) => {
  const medicines = [
    {
      id: '1',
      name: 'Paracetamol',
      image: 'https://cdn1.staticpanvel.com.br/produtos/15/156550-15.jpg?ims=424x',
      price: 5.00,
    },
    {
      id: '2',
      name: 'Ibuprofeno',
      image: 'https://santaluciadrogaria.vtexassets.com/arquivos/ids/155986/7898148295159.png?v=637637945204100000',
      price: 7.50,
    },
    {
      id: '3',
      name: 'Amoxicilina',
      image: 'https://maxxieconomica.com/storage/photos/1/Products/ean/7896004702223.jpg',
      price: 12.00,
    },
  ];

  return (
    <View style={styles.page}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigateTo('Home')}>
          <Text style={styles.backButton}>←</Text>
        </TouchableOpacity>
        <Text style={styles.subheading}>Mercado de Remédios</Text>
      </View>
      <View style={styles.medicineList}>
        {medicines.map((medicine) => (
          <View key={medicine.id} style={styles.medicineItem}>
            <Image
              source={{ uri: medicine.image }}
              style={styles.medicineImage}
            />
            <Text style={styles.medicineName}>{medicine.name}</Text>
            <Text style={styles.medicinePrice}>Preço: R$ {medicine.price.toFixed(2)}</Text>
            <Button title="Comprar" onPress={() => addToCart(medicine)} color="#3498db" />
          </View>
        ))}
      </View>
    </View>
  );
};

// Tela de Carrinho de Compras com cálculo do total
const CartScreen = ({ cart, navigateTo }) => {
  const totalPrice = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);

  return (
    <View style={styles.page}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigateTo('Home')}>
          <Text style={styles.backButton}>←</Text>
        </TouchableOpacity>
        <Text style={styles.subheading}>Carrinho de Remédios</Text>
      </View>
      {cart.length === 0 ? (
        <Text>Seu carrinho está vazio.</Text>
      ) : (
        <View style={styles.cartList}>
          {cart.map((item, index) => (
            <View key={index} style={styles.cartItem}>
              <Image source={{ uri: item.image }} style={styles.cartImageSmall} />
              <View style={styles.cartItemDetails}>
                <Text style={styles.cartItemName}>{item.name}</Text>
                <Text style={styles.cartItemQuantity}>Quantidade: {item.quantity}</Text>
                <Text style={styles.cartItemPrice}>Preço: R$ {(item.price * item.quantity).toFixed(2)}</Text>
              </View>
            </View>
          ))}
          <Text style={styles.totalPrice}>Total: R$ {totalPrice.toFixed(2)}</Text>
        </View>
      )}
    </View>
  );
};

// Tela de Fila de Espera com som
const QueueScreen = ({ navigateTo }) => {
  const [inQueue, setInQueue] = useState(false);
  const [queuePosition, setQueuePosition] = useState(null);
  const [waitingTime, setWaitingTime] = useState(null);
  const [timeLeft, setTimeLeft] = useState(null);
  const [message, setMessage] = useState("");
  const [sound, setSound] = useState();

  const enterQueue = () => {
    const position = Math.floor(Math.random() * 100) + 1;
    const time = Math.floor(Math.random() * 10) + 5;

    setQueuePosition(position);
    setWaitingTime(time);
    setTimeLeft(time);
    setInQueue(true);
    setMessage(`Você está na posição ${position} da fila. Tempo estimado: ${time} segundos.`);
  };

  useEffect(() => {
    if (inQueue && timeLeft > 0) {
      const timer = setInterval(() => {
        setTimeLeft((prev) => prev - 1);
      }, 1000);

      return () => clearInterval(timer);
    } else if (inQueue && timeLeft === 0) {
      playSound();
      setMessage(`Sua vez chegou! Por favor, dirija-se à sala ${Math.floor(Math.random() * 10) + 1} para consulta com o Dr. João da Silva.`);
      setInQueue(false);
    }
  }, [inQueue, timeLeft]);

  async function playSound() {
    const { sound } = await Audio.Sound.createAsync(
      require('./assets/car-warning-sound-2-189737.mp3') // Certifique-se de que o arquivo está na pasta 'assets'
    );
    setSound(sound);
    await sound.playAsync();
  }

  useEffect(() => {
    return sound
      ? () => {
          sound.unloadAsync();
        }
      : undefined;
  }, [sound]);

  return (
    <View style={styles.page}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigateTo('Home')}>
          <Text style={styles.backButton}>←</Text>
        </TouchableOpacity>
        <Text style={styles.subheading}>Fila de Espera</Text>
      </View>
      <View style={styles.queueContent}>
        {inQueue ? (
          <Text>{message}{'\n'}Tempo restante: {timeLeft} segundos</Text>
        ) : (
          <>
            <Text>{message || "Clique em 'Entrar na Fila' para iniciar o processo."}</Text>
            <Button title="Entrar na Fila" onPress={enterQueue} color="#3498db" />
          </>
        )}
      </View>
    </View>
  );
};
